// Mocks generated by Mockito 5.4.4 from annotations
// in video_game_catalogue_app/test/unit/blocs/games/games_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:video_game_catalogue_app/data/data_providers/collections_data_provider.dart'
    as _i9;
import 'package:video_game_catalogue_app/data/repositories/collections_repository.dart'
    as _i8;
import 'package:video_game_catalogue_app/data/repositories/games_repository.dart'
    as _i4;
import 'package:video_game_catalogue_app/models/collection.dart' as _i2;
import 'package:video_game_catalogue_app/models/game.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCollection_0 extends _i1.SmartFake implements _i2.Collection {
  _FakeCollection_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_1 extends _i1.SmartFake implements _i3.Client {
  _FakeClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GamesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGamesRepository extends _i1.Mock implements _i4.GamesRepository {
  MockGamesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i6.Game>> getGames() => (super.noSuchMethod(
        Invocation.method(
          #getGames,
          [],
        ),
        returnValue: _i5.Future<List<_i6.Game>>.value(<_i6.Game>[]),
      ) as _i5.Future<List<_i6.Game>>);

  @override
  _i5.Future<_i6.Game> getGame(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getGame,
          [id],
        ),
        returnValue: _i5.Future<_i6.Game>.value(_i7.dummyValue<_i6.Game>(
          this,
          Invocation.method(
            #getGame,
            [id],
          ),
        )),
      ) as _i5.Future<_i6.Game>);

  @override
  _i5.Future<dynamic> getGamesByGenre(String? genre) => (super.noSuchMethod(
        Invocation.method(
          #getGamesByGenre,
          [genre],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<void> createGame(
    _i6.Game? game,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createGame,
          [
            game,
            token,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateGame(
    _i6.Game? game,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGame,
          [
            game,
            token,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteGame(
    int? id,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteGame,
          [
            id,
            token,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [CollectionsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCollectionsRepository extends _i1.Mock
    implements _i8.CollectionsRepository {
  MockCollectionsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i2.Collection>> getCollections() => (super.noSuchMethod(
        Invocation.method(
          #getCollections,
          [],
        ),
        returnValue: _i5.Future<List<_i2.Collection>>.value(<_i2.Collection>[]),
      ) as _i5.Future<List<_i2.Collection>>);

  @override
  _i5.Future<_i2.Collection> getCollection(int? collectionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCollection,
          [collectionId],
        ),
        returnValue: _i5.Future<_i2.Collection>.value(_FakeCollection_0(
          this,
          Invocation.method(
            #getCollection,
            [collectionId],
          ),
        )),
      ) as _i5.Future<_i2.Collection>);

  @override
  _i5.Future<List<int>> getGameIdsByStatus(
    int? userId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGameIdsByStatus,
          [
            userId,
            status,
          ],
        ),
        returnValue: _i5.Future<List<int>>.value(<int>[]),
      ) as _i5.Future<List<int>>);

  @override
  _i5.Future<_i2.Collection> addCollection(_i2.Collection? collection) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCollection,
          [collection],
        ),
        returnValue: _i5.Future<_i2.Collection>.value(_FakeCollection_0(
          this,
          Invocation.method(
            #addCollection,
            [collection],
          ),
        )),
      ) as _i5.Future<_i2.Collection>);

  @override
  _i5.Future<void> deleteCollection(int? collectionId) => (super.noSuchMethod(
        Invocation.method(
          #deleteCollection,
          [collectionId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.Collection> updateCollection(
    int? collectionId,
    _i2.Collection? collection,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCollection,
          [
            collectionId,
            collection,
          ],
        ),
        returnValue: _i5.Future<_i2.Collection>.value(_FakeCollection_0(
          this,
          Invocation.method(
            #updateCollection,
            [
              collectionId,
              collection,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Collection>);
}

/// A class which mocks [CollectionsDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockCollectionsDataProvider extends _i1.Mock
    implements _i9.CollectionsDataProvider {
  MockCollectionsDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_1(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.Client);

  @override
  set client(_i3.Client? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<dynamic> getCollections() => (super.noSuchMethod(
        Invocation.method(
          #getCollections,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> getCollection(String? collectionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCollection,
          [collectionId],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> getGameIdsByStatus(
    String? userId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGameIdsByStatus,
          [
            userId,
            status,
          ],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> addCollection(Map<String, dynamic>? collection) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCollection,
          [collection],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> deleteCollection(String? collectionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCollection,
          [collectionId],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> updateCollection(
    String? collectionId,
    Map<String, dynamic>? collection,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCollection,
          [
            collectionId,
            collection,
          ],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
